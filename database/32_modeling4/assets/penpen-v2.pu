@startuml penpen-v2

skinparam Linetype ortho

package ユーザ {
    entity ユーザ {
        * ユーザID
        --
        ユーザ名
    }
}

package リマインダー {
    entity タスク {
        * タスクID
        --
        通知メッセージ文
        作成日
        コマンド
        + 作成ユーザID [FK]
        + リマインド周期ID [FK]
    }

    note top of タスク
        タスクの作成タイミングでINSERT
        同じタイミングでタスク通知の
        テーブルに通知予定を作成する
    end note

    entity タスク通知 {
        * タスクID
        * ユーザID
        * 次回通知日
        --
    }

    note bottom of タスク通知
        1時間のバッチごとに、
        バッチ起動時と次回通知日を
        比較して、次回通知日を過ぎて
        いる場合にユーザにタスクの
        内容を通知する

        タスクの通知タイミングで
        次回通知日のレコードを
        INSRETする
    end note

    entity タスク完了 {
        * タスクID
        * ユーザID
        * 完了日
        --
    }

    note bottom of タスク完了
        ユーザがタスクの完了を
        Slack画面で押下した場合
        タスク通知テーブルから
        ユーザとタスクのレコード
        を削除する

        完了時間からタスク通知
        レコードから将来のレコードを
        削除して、タスク完了
        テーブルにINSRETする
    end note

    entity リマインド周期 {
        * リマインド周期ID
        --
    }

    note top of リマインド周期
        タスクからはINNER JOINで
        対応する時間間隔を抽出
    end note

    entity 時別周期 {
        * 時別周期ID
        --
        + リマインド周期ID [FK]
        設定可能時間
        表示用テキスト
    }

    entity 日別周期 {
        * 日別周期ID
        --
        + リマインド周期ID [FK]
        設定可能間隔日
        表示用テキスト
    } 

    entity 週別周期 {
        * 週別周期ID
        --
        + リマインド周期ID [FK]
        設定可能曜日
        表示用テキスト
    } 

    entity 月別周期 {
        * 月別周期ID
        --
        + リマインド周期ID [FK]
        設定可能日
        表示用テキスト
    } 
}

タスク ||--|{ タスク通知
ユーザ ||--o{ タスク通知
タスク ||--|{ タスク完了
ユーザ ||--o{ タスク完了
タスク ||--o{ ユーザ

タスク ||-r-|{ リマインド周期
リマインド周期 ||--|| 時別周期
リマインド周期 ||--|| 日別周期
リマインド周期 ||--|| 週別周期
リマインド周期 ||--|| 月別周期

@enduml