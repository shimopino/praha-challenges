// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// 消費税区分
model TaxCategory {
  // 種別なので [1, 2, 3] で定義する
  id              Int            @id @default(autoincrement())
  taxCategoryName String
  taxRateRanges   TaxRateRange[]
  items           Item[]

  @@map("tax_category")
}

// 税率区分
model TaxRateRange {
  // 10数個程度のレコードなので 整数 で定義する
  id               Int         @id @default(autoincrement())
  // appliedStateDate DateTime
  // appliedEndDate   DateTime
  appliedStateDate String
  appliedEndDate   String
  taxCategory      TaxCategory @relation(fields: [taxCategoryId], references: [id])
  taxCategoryId    Int
  taxRate          Float

  @@map("tax_rate_range")
}

// 顧客
model Customer {
  // アプリケーション側の UUID で生成する
  id     String  @id
  name   String
  phone  String  @unique
  orders Order[]

  @@map("customer")
}

// 商品
model Item {
  // アプリケーション側の UUID で生成する
  id             String             @id
  itemName       String
  // 以下は　Postgres の場合は decimal(65,30) にマッピングされる
  // @db.Decimal(X, Y) でも指定することができる
  normalPrice    Decimal
  category       ItemCategory       @relation(fields: [categoryId], references: [id])
  categoryId     String
  taxCategory    TaxCategory        @relation(fields: [taxCategoryId], references: [id])
  taxCategoryId  Int
  // セット商品区分
  isSetItem      Boolean
  orderDetails   OrderDetail[]
  setItems       SetItemComponent[] @relation("SetItem")
  ComponentItems SetItemComponent[] @relation("ComponentItem")

  @@map("item")
}

// 商品カテゴリ
model ItemCategory {
  // アプリケーション側の UUID で生成する
  id           String @id
  categoryName String
  items        Item[]

  @@map("item_category")
}

// セット商品構成
model SetItemComponent {
  setItem   Item   @relation(name: "SetItem", fields: [setItemId], references: [id])
  setItemId String
  item      Item   @relation(name: "ComponentItem", fields: [itemId], references: [id])
  itemId    String
  count     Int

  @@unique([setItemId, itemId], name: "SetItemComponent_unique_key")
  @@map("set_item_component")
}

